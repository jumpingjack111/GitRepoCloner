import { useState } from 'react'; import { Card, CardContent } from "@/components/ui/card"; import { Checkbox } from "@/components/ui/checkbox"; import { Button } from "@/components/ui/button";

const trackerData = [ { phase: "Phase 1: Foundation Building (Apr - Dec 2025)", tasks: [ "Finish high-school math (functions, limits, continuity)", "Complete basic calculus from Sydsaeter & Hammond or Schaum", "Learn basic linear algebra (Schaum’s + 3Blue1Brown)", "Read Varian Chapters 1–10 (consumer + producer theory)", "Start Probability (Sheldon Ross Chapters 1–5)", "Maintain 3–4 hour weekly study habit" ] }, { phase: "Phase 2: Core Prep (Jan - Oct 2026)", tasks: [ "Finish Varian Microeconomics (full book)", "Cover Macroeconomics (Blanchard or Dornbusch)", "Study Real Analysis (SC Malik or equivalent)", "Complete Math Econ (Simon & Blume)", "Start solving past years' Paper 2", "Attempt at least 3 mock tests by Oct 2026" ] }, { phase: "Phase 3: Final Sprint (Nov 2026 - May 2027)", tasks: [ "Weekly mock tests (Paper 1 and 2)", "Focus on weak areas (math/stats/econ)", "Practice mock interviews", "Apply for ISI & backup institutions (DSE, IGIDR)", "Prepare for CFA Level 1 (if pursuing)" ] }, { phase: "Optional 4th Year (Hons)", tasks: [ "Finish CFA Level 1 or 2", "Apply for internships in quant/econ roles", "Research paper or independent project", "ISI MSQE Interview if selected" ] } ];

export default function ISITracker() { const [progress, setProgress] = useState({});

const toggleTask = (phase, task) => { const key = ${phase}-${task}; setProgress(prev => ({ ...prev, [key]: !prev[key] })); };

return ( <div className="p-6 space-y-6"> <h1 className="text-2xl font-bold text-center">ISI MSQE Study Tracker</h1> {trackerData.map(section => ( <Card key={section.phase}> <CardContent className="p-4"> <h2 className="text-xl font-semibold mb-4">{section.phase}</h2> <ul className="space-y-2"> {section.tasks.map(task => { const key = ${section.phase}-${task}; return ( <li key={key} className="flex items-center space-x-3"> <Checkbox checked={!!progress[key]} onCheckedChange={() => toggleTask(section.phase, task)} /> <span className={progress[key] ? "line-through" : ""}>{task}</span> </li> ); })} </ul> </CardContent> </Card> ))} <div className="text-center"> <Button onClick={() => setProgress({})}>Reset Progress</Button> </div> </div> ); }

